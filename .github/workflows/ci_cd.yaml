name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Run tests
    #   run: |
    #     pytest tests/
        
  deploy:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: List directory contents
      run: |
        ls -la
        pwd
        
    - name: Build the Docker Compose stack
      run: docker-compose build

    - name: Push the Docker images
      if: success() && github.ref == 'refs/heads/master'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker-compose push
    # needs: test
    # runs-on: ubuntu-latest
    
    # steps:
    # - uses: actions/checkout@v2
    # - name: Deploy to server
    #   env:
    #     HOST: ${{ secrets.HOST }}
    #     USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #     PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #   run: |
    #     ssh $USERNAME@$HOST 'git pull'
    #     # scp -r . $USERNAME@$HOST
    #     ssh $USERNAME@$HOST 'docker build'
    #     ssh $USERNAME@$HOST 'docker run -d -p 8080:8080 '
    # - name: Update Swagger documentation
    #   env:
    #     HOST: ${{ secrets.HOST }}
    #     USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #     PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #   run: |
    #     scp -r your-swagger-files $USERNAME@$HOST:/server/swagger/docs
    #     ssh $USERNAME@$HOST 'cd /server/swagger/docs && docker build -t swagger-docs .'
    #     ssh $USERNAME@$HOST 'cd /server/swagger/docs && docker run -d -p 8081:8080 swagger-docs'
